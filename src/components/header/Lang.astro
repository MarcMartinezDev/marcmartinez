---
import { ChevronDown } from "@lucide/astro";

const locales = [
  { code: "es", label: "ES" },
  { code: "en", label: "EN" },
  { code: "it", label: "IT" },
];

const currentLocale = Astro.url.pathname.split("/")[1] || "es";
---

<div class="relative inline-block text-sm">
  <select
    name="language"
    class="appearance-none bg-transparent outline-none md:border mdborder-muted/30 md:rounded-lg px-4 py-2 pr-6 text-muted hover:text-foreground hover:border-accent transition-colors"
    onchange="window.location.href = this.value"
    aria-label="Language selector"
  >
    {
      locales.map((locale) => {
        const selected = locale.code === currentLocale;
        const pathWithoutLang = Astro.url.pathname.replace(/^\/(es|en|it)/, "");
        const targetPath =
          locale.code === "es"
            ? `${pathWithoutLang || "/"}`
            : `/${locale.code}${pathWithoutLang}`;
        return (
          <option value={targetPath} selected={selected}>
            {locale.label}
          </option>
        );
      })
    }
  </select>

  <div
    class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2"
  >
    <ChevronDown size={18} class="text-muted" />
  </div>
</div>
