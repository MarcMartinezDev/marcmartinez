---
import SectionTitle from "../SectionTitle.astro";

const { t } = Astro.props;
---

<section id={t.sections.faqs}>
  <SectionTitle title={t.faqs.title} />
  <div class="w-full mx-auto md:w-2/3">
    <div class="space-y-6" id="faq-container">
      {
        t.faqs.data.map(
          (item: { question: string; answer: string }, index: number) => (
            <div class="border-b border-muted/20 pb-4">
              <button
                class="w-full text-left flex justify-between items-center text-lg font-medium text-foreground hover:text-accent transition-colors"
                data-index={index}
              >
                <span class="text-base">{item.question}</span>
                <svg
                  class="w-5 h-5 transition-transform"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z"
                    clip-rule="evenodd"
                  />
                </svg>
              </button>
              <div class="faq-answer mt-2 text-muted text-base hidden">
                {item.answer}
              </div>
            </div>
          )
        )
      }
    </div>
  </div>
</section>

<!-- Framer Motion toggle animation -->
<script type="module">
  import { animate } from "https://cdn.skypack.dev/motion";

  const answers = document.querySelectorAll(".faq-answer");
  const toggles = document.querySelectorAll("#faq-container button");

  toggles.forEach((btn, index) => {
    btn.addEventListener("click", () => {
      const answer = answers[index];
      const isOpen = !answer.classList.contains("hidden");

      answers.forEach((a, i) => {
        if (i !== index) {
          a.classList.add("hidden");
        }
      });

      if (isOpen) {
        animate(
          answer,
          { opacity: [1, 0], height: [answer.scrollHeight, 0] },
          { duration: 0.3 }
        );
        setTimeout(() => answer.classList.add("hidden"), 300);
      } else {
        answer.classList.remove("hidden");
        animate(
          answer,
          { opacity: [0, 1], height: [0, answer.scrollHeight] },
          { duration: 0.3 }
        );
      }
    });
  });
</script>
